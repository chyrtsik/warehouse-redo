/*
 * Copyright (c) 2007-2011 Artigile.
 * Software art development company.
 * All Rights Reserved.
 *
 * This software is the confidential and proprietary information of Artigile. ("Confidential Information").
 * You shall not disclose such Confidential Information and shall use it only in accordance with the terms of the
 * license agreement you entered into with Artigile software company.
 */

package com.artigile.warehouse.gui.menuitems.details.types.fields;

import com.artigile.warehouse.gui.core.properties.data.filtering.DataFiltering;
import com.artigile.warehouse.gui.core.properties.data.validation.DataValidation;
import com.artigile.warehouse.gui.core.properties.data.validation.DataValidationException;
import com.artigile.warehouse.utils.ModelFieldsLengths;
import com.artigile.warehouse.utils.StringUtils;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.util.List;
import java.util.ResourceBundle;

/**
 * @author Shyrik, 15.12.2008
 */

/**
 * Form for ediding list of the values in the enumeration field.
 */
public class EnumValuesForm {
    private JPanel fieldEnumValuesPanel;
    private JTextArea fieldEnumValues;
    private JPanel contentPanel;

    public EnumValuesForm() {
        // Limitation of text length in the fields
        DataFiltering.setTextLengthLimit(fieldEnumValues, ModelFieldsLengths.DEFAULT_BIG_TEXT_LENGTH);
    }

    public void setEnumValues(List<String> values) {
        fieldEnumValues.setText(StringUtils.listToDelimitedString(values, "\n"));
    }

    public List<String> getEnumValues() {
        return StringUtils.delimitedStringToList(fieldEnumValues.getText(), "\n");
    }

    public JPanel getContentPanel() {
        return contentPanel;
    }

    public void validateData() throws DataValidationException {
        String text = fieldEnumValues.getText();
        DataValidation.checkNotEmpty(text, fieldEnumValues);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPanel = new JPanel();
        contentPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        fieldEnumValuesPanel = new JPanel();
        fieldEnumValuesPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        contentPanel.add(fieldEnumValuesPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        fieldEnumValuesPanel.setBorder(BorderFactory.createTitledBorder(ResourceBundle.getBundle("i18n/warehouse").getString("detail.field.properties.enumValues")));
        final JScrollPane scrollPane1 = new JScrollPane();
        fieldEnumValuesPanel.add(scrollPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(300, 150), new Dimension(0, 150), null, 0, false));
        fieldEnumValues = new JTextArea();
        scrollPane1.setViewportView(fieldEnumValues);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPanel;
    }
}
