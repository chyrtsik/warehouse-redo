/*
 * Copyright (c) 2007-2011 Artigile.
 * Software development company.
 * All Rights Reserved.
 *
 * This software is the confidential and proprietary information of Artigile. ("Confidential Information").
 * You shall not disclose such Confidential Information and shall use it only in accordance with the terms of the
 * license agreement you entered into with Artigile software company.
 */

package com.artigile.warehouse.adapter.spi.impl.configuration;

import com.artigile.swingx.workarounds.EnclosingScrollPaneEvent;
import com.artigile.swingx.workarounds.EnclosingScrollPaneListener;
import com.artigile.swingx.workarounds.JXTableEx;
import com.artigile.warehouse.adapter.spi.impl.DomainColumn;
import com.artigile.warehouse.adapter.spi.impl.column.relationship.gui.RelationshipHeaderManager;
import com.artigile.warehouse.adapter.spi.impl.column.relationship.gui.editor.ComboRelationshipEditor;
import com.artigile.warehouse.gui.core.report.view.cell.ReportCellEditor;
import com.artigile.warehouse.gui.core.report.view.cell.ReportCellRenderer;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.table.TableModel;
import java.awt.*;
import java.util.List;

/**
 * @author Valery Barysok, 6/20/11
 */

public class RelationshipTableView {
    private JScrollPane scrollPane;
    private JXTableEx table;

    private RelationshipHeaderManager relationshipHeaderManager;

    public RelationshipTableView(List<DomainColumn> domainColumns) {
        this.relationshipHeaderManager = new RelationshipHeaderManager(domainColumns);
    }

    private void createUIComponents() {
        table = new JXTableEx();
        table.addEnclosingScrollPaneListener(new EnclosingScrollPaneListener() {

            @Override
            public void configure(EnclosingScrollPaneEvent event) {
                getRelationshipHeaderManager().install(table);
            }

            @Override
            public void unconfigure(EnclosingScrollPaneEvent event) {
                getRelationshipHeaderManager().uninstall();
            }
        });
    }

    public JXTableEx getTable() {
        return table;
    }

    public JComponent getViewComponent() {
        return scrollPane;
    }

    public RelationshipHeaderManager getRelationshipHeaderManager() {
        return relationshipHeaderManager;
    }

    public DomainColumn getRelationship(int index) {
        return ((ComboRelationshipEditor) relationshipHeaderManager.getRelationshipColumns().get(index).getRelationshipEditor()).getRelationshipColumn();
    }

    public void setRelationship(int index, DomainColumn domainColumn) {
        ((ComboRelationshipEditor) relationshipHeaderManager.getRelationshipColumns().get(index).getRelationshipEditor()).setRelationshipColumn(domainColumn);
    }

    public void setModel(TableModel tableModel) {
        table.setModel(tableModel);
        initTableCells();
    }

    private void initTableCells() {
        for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) {
            //Custom rendering and editing of table cells.
            table.getColumn(i).setCellRenderer(new ReportCellRenderer());
            table.getColumn(i).setCellEditor(new ReportCellEditor(new JTextField()));
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        scrollPane = new JScrollPane();
        scrollPane.setHorizontalScrollBarPolicy(30);
        panel1.add(scrollPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        table.setAutoResizeMode(0);
        table.setAutoStartEditOnKeyStroke(true);
        table.setCellSelectionEnabled(true);
        table.setColumnControlVisible(false);
        table.setDoubleBuffered(true);
        table.setEditable(false);
        table.setFillsViewportHeight(true);
        table.setHorizontalScrollEnabled(false);
        table.setInheritsPopupMenu(true);
        table.setPreferredScrollableViewportSize(new Dimension(150, 100));
        table.setShowVerticalLines(true);
        table.setSortable(false);
        table.setSurrendersFocusOnKeystroke(true);
        table.setTerminateEditOnFocusLost(false);
        table.setVerifyInputWhenFocusTarget(false);
        table.putClientProperty("JTable.autoStartsEdit", Boolean.TRUE);
        table.putClientProperty("terminateEditOnFocusLost", Boolean.FALSE);
        scrollPane.setViewportView(table);
    }
}
